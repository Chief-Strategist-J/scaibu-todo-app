include:
    - package:flutter_lints/flutter.yaml
    - package:very_good_analysis/analysis_options.7.0.0.yaml

analyzer:
  exclude:
    # Generated files
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"
    - "**/*.gen.dart"
    - "**/*.config.dart"
    - "**/*.chopper.dart"
    - "**/*.graphql.dart"
    - "**/*.gql.dart"
    - "**/*.module.dart"
    - "lib/generated/**"
    - "lib/**.gen.dart"
    - "lib/generated_plugin_registrant.dart"
    # Test files
    - "test/**.mocks.dart"
    - "**/test/generated_*.dart"
    # Build
    - "build/**"
    - ".dart_tool/**"
    # Assets
    - "assets/**"
    - "lib/generated_plugin_registrant.dart"

  plugins:
    - custom_lint

  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
    enable-experiment:
      - sealed-class
      - patterns
      - records
      - macros
      - extension-types

  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  errors:
    # Clean Architecture specific
    implementation_imports: error
    invalid_use_of_visible_for_testing_member: error
    public_member_api_docs: error
    avoid_relative_lib_imports: error
    directives_ordering: error
    depend_on_referenced_packages: error
    package_api_docs: error
    library_private_types_in_public_api: error
    invalid_dependency: error
    missing_dependency: error

    # Critical errors
    todo: error
    dead_code: error
    invalid_annotation_target: error
    missing_enum_constant_in_switch: error
    missing_required_param: error
    must_call_super: error
    await_only_futures: error
    empty_catches: error
    missing_return: error
    undefined_hidden_name: error
    undefined_shown_name: error
    unreachable_from_main: error
    unsafe_html: error
    unused_element: error
    unused_field: error
    unused_import: error
    unused_local_variable: error
    unused_shown_name: error

    # Type safety
    always_specify_types: error
    strict_raw_type: error
    invalid_assignment: error
    return_of_invalid_type: error
    argument_type_not_assignable: error
    unchecked_use_of_nullable_value: error
    null_check_on_nullable_type_parameter: error
    nullable_type_in_catch_clause: error
    invalid_null_aware_operator: error

    # Code style & maintainability
    avoid_annotating_with_dynamic: error
    avoid_catches_without_on_clauses: error
    avoid_catching_errors: error
    avoid_classes_with_only_static_members: error
    avoid_equals_and_hash_code_on_mutable_classes: error
    avoid_field_initializers_in_const_classes: error
    avoid_final_parameters: error
    avoid_implementing_value_types: error
    avoid_js_rounded_ints: error
    avoid_returning_null: error
    avoid_returning_null_for_future: error
    avoid_returning_this: error
    avoid_setters_without_getters: error
    avoid_slow_async_io: error
    avoid_type_to_string: error
    avoid_types_as_parameter_names: error
    avoid_web_libraries_in_flutter: error
    close_sinks: error
    collection_methods_unrelated_type: error
    comment_references: error
    diagnostic_describe_all_properties: error
    do_not_use_environment: error
    exhaustive_cases: error
    file_names: error
    flutter_style_todos: error
    implicit_reopen: error
    invalid_case_patterns: error
    lines_longer_than_80_chars: error
    literal_only_boolean_expressions: error
    no_adjacent_strings_in_list: error
    no_logic_in_create_state: error
    prefer_final_fields: error
    prefer_final_in_for_each: error
    prefer_final_locals: error
    sized_box_shrink_expand: error
    type_annotate_public_apis: error
    unawaited_futures: error
    use_build_context_synchronously: error
    use_decorated_box: error
    use_key_in_widget_constructors: error
    use_named_constants: error
    use_setters_to_change_properties: error
    use_string_buffers: error
    void_checks: error

    # Documentation
    missing_code_block_language_in_doc_comment: error
    missing_whitespace_between_adjacent_strings: error
    package_prefixed_library_names: error
    slash_for_doc_comments: error

linter:
  rules:
    # Clean Architecture rules
    - always_declare_return_types
    - always_put_required_named_parameters_first
    - always_specify_types
    - always_use_package_imports
    - avoid_implementing_value_types
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cascade_invocations
    - directives_ordering
    - do_not_use_environment
    - exhaustive_cases
    - library_private_types_in_public_api
    - no_default_cases
    - package_api_docs
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_interpolation_to_compose_strings
    - public_member_api_docs
    - sort_constructors_first
    - type_annotate_public_apis
    - unnecessary_getters_setters
    - use_setters_to_change_properties

    # Flutter specific
    - sized_box_for_whitespace
    - sized_box_shrink_expand
    - sort_child_properties_last
    - use_build_context_synchronously
    - use_colored_box
    - use_decorated_box
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors
    - use_super_parameters

    # Code quality
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_classes_with_only_static_members
    - avoid_double_and_int_checks
    - avoid_dynamic_calls
    - avoid_empty_else
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_function_literals_in_foreach_calls
    - avoid_init_to_null
    - avoid_multiple_declarations_per_line
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_print
    - avoid_redundant_argument_values
    - avoid_renaming_method_parameters
    - avoid_returning_null_for_void
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - avoid_unnecessary_containers
    - await_only_futures
    - cancel_subscriptions
    - cast_nullable_to_non_nullable
    - close_sinks
    - collection_methods_unrelated_type
    - combinators_ordering
    - comment_references
    - constant_identifier_names
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - dangling_library_doc_comments
    - depend_on_referenced_packages
    - deprecated_consistency
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - eol_at_end_of_file
    - file_names
    - hash_and_equals
    - implicit_call_tearoffs
    - invalid_case_patterns
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - library_annotations
    - library_names
    - library_prefixes
    - lines_longer_than_80_chars
    - literal_only_boolean_expressions
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_leading_underscores_for_library_prefixes
    - no_leading_underscores_for_local_identifiers
    - no_literal_bool_comparisons
    - no_runtimeType_toString
    - null_check_on_nullable_type_parameter
    - null_closures
    - one_member_abstracts
    - only_throw_errors
    - overridden_fields
    - package_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_expression_function_bodies
    - prefer_for_elements_to_map_fromIterable
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_int_literals
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_is_not_operator
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_method_calls
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - prefer_void_to_null
    - provide_deprecation_message
    - recursive_getters
    - require_trailing_commas
    - slash_for_doc_comments
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_init_formals
    - type_literal_in_constant_pattern
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_breaks
    - unnecessary_const
    - unnecessary_constructor_name
    - unnecessary_late
    - unnecessary_library_directive
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_aware_operator_on_extension_on_nullable
    - unnecessary_null_checks
    - unnecessary_null_in_if_null_operators
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - unnecessary_to_list_in_spreads
    - unreachable_from_main
    - unrelated_type_equality_checks
    - use_enums
    - use_function_type_syntax_for_parameters
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_late_for_private_fields_and_variables
    - use_named_constants
    - use_raw_strings
    - use_rethrow_when_possible
    - use_string_buffers
    - use_test_throws_matchers
    - valid_regexps

custom_lint:
  rules:
    # Clean Architecture enforcements
    - avoid_layer_violation: true
    - avoid_data_layer_in_presentation: true
    - avoid_domain_layer_in_presentation: true
    - avoid_infrastructure_layer_in_domain: true
    - avoid_data_layer_in_domain: true
    - enforce_dependency_direction: true
    - proper_repository_usage: true
    - proper_use_case_usage: true
    - entities_must_be_immutable: true
    - avoid_business_logic_in_presentation: true
    - value_objects_must_be_validated: true
    - enforce_exception_handling: true
    - enforce_failure_handling: true
    - use_case_single_responsibility: true
    - repository_single_responsibility: true